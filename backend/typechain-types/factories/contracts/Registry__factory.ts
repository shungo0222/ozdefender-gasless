/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Registry, RegistryInterface } from "../../contracts/Registry";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract MinimalForwarder",
        name: "forwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "Registered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "names",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "owners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161064138038061064183398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516105b06100916000396000818160b201526102e201526105b06000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632b1fd99514610051578063572b6c05146100a25780635cf3d346146100f2578063f2c298be14610112575b600080fd5b61008561005f3660046103df565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e26100b0366004610490565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b6040519015158152602001610099565b610105610100366004610490565b610127565b60405161009991906104f0565b6101256101203660046103df565b6101c1565b005b6000602081905290815260409020805461014090610523565b80601f016020809104026020016040519081016040528092919081815260200182805461016c90610523565b80156101b95780601f1061018e576101008083540402835291602001916101b9565b820191906000526020600020905b81548152906001019060200180831161019c57829003601f168201915b505050505081565b60006001600160a01b03166001826040516101dc919061055e565b908152604051908190036020019020546001600160a01b0316146102335760405162461bcd60e51b815260206004820152600a6024820152692730b6b2903a30b5b2b760b11b604482015260640160405180910390fd5b600061023d6102de565b905080600183604051610250919061055e565b908152604080516020928190038301902080546001600160a01b0319166001600160a01b03948516179055918316600090815280825291909120835161029892850190610330565b50806001600160a01b03167fb3eccf73f39b1c07947c780b2b39df2a1bb058b4037b0a42d0881ca1a028a132836040516102d291906104f0565b60405180910390a25050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633148015610319575060143610155b1561032b575060131936013560601c90565b503390565b82805461033c90610523565b90600052602060002090601f01602090048101928261035e57600085556103a4565b82601f1061037757805160ff19168380011785556103a4565b828001600101855582156103a4579182015b828111156103a4578251825591602001919060010190610389565b506103b09291506103b4565b5090565b5b808211156103b057600081556001016103b5565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156103f157600080fd5b813567ffffffffffffffff8082111561040957600080fd5b818401915084601f83011261041d57600080fd5b81358181111561042f5761042f6103c9565b604051601f8201601f19908116603f01168101908382118183101715610457576104576103c9565b8160405282815287602084870101111561047057600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156104a257600080fd5b81356001600160a01b03811681146104b957600080fd5b9392505050565b60005b838110156104db5781810151838201526020016104c3565b838111156104ea576000848401525b50505050565b602081526000825180602084015261050f8160408501602087016104c0565b601f01601f19169190910160400192915050565b600181811c9082168061053757607f821691505b6020821081141561055857634e487b7160e01b600052602260045260246000fd5b50919050565b600082516105708184602087016104c0565b919091019291505056fea2646970667358221220810c693a58aeda21342b8008d44cd073ec2de86e4555f8693b018ae9b1fe11f864736f6c63430008090033";

type RegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Registry__factory extends ContractFactory {
  constructor(...args: RegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    forwarder: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Registry> {
    return super.deploy(forwarder, overrides || {}) as Promise<Registry>;
  }
  override getDeployTransaction(
    forwarder: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(forwarder, overrides || {});
  }
  override attach(address: string): Registry {
    return super.attach(address) as Registry;
  }
  override connect(signer: Signer): Registry__factory {
    return super.connect(signer) as Registry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistryInterface {
    return new utils.Interface(_abi) as RegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Registry {
    return new Contract(address, _abi, signerOrProvider) as Registry;
  }
}
