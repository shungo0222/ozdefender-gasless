/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC2771Forwarder,
  ERC2771ForwarderInterface,
} from "../../../../@openzeppelin/contracts/metatx/ERC2771Forwarder";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint48",
        name: "deadline",
        type: "uint48",
      },
    ],
    name: "ERC2771ForwarderExpiredRequest",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "ERC2771ForwarderInvalidSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestedValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "msgValue",
        type: "uint256",
      },
    ],
    name: "ERC2771ForwarderMismatchedValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "ERC2771UntrustfulTarget",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "ExecutedForwardRequest",
    type: "event",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint48",
            name: "deadline",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct ERC2771Forwarder.ForwardRequestData",
        name: "request",
        type: "tuple",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint48",
            name: "deadline",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct ERC2771Forwarder.ForwardRequestData[]",
        name: "requests",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "refundReceiver",
        type: "address",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint48",
            name: "deadline",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct ERC2771Forwarder.ForwardRequestData",
        name: "request",
        type: "tuple",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162001703380380620017038339810160408190526200003591620001cc565b6040805180820190915260018152603160f81b602082015281906200005c8260006200010b565b610120526200006d8160016200010b565b61014052815160208084019190912060e052815190820120610100524660a052620000fb60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c0525062000439565b60006020835110156200012b57620001238362000144565b90506200013e565b8162000138848262000313565b5060ff90505b92915050565b600080829050601f815111156200017b578260405163305a27a960e01b8152600401620001729190620003df565b60405180910390fd5b8051620001888262000414565b179392505050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620001c3578181015183820152602001620001a9565b50506000910152565b600060208284031215620001df57600080fd5b81516001600160401b0380821115620001f757600080fd5b818401915084601f8301126200020c57600080fd5b81518181111562000221576200022162000190565b604051601f8201601f19908116603f011681019083821181831017156200024c576200024c62000190565b816040528281528760208487010111156200026657600080fd5b62000279836020830160208801620001a6565b979650505050505050565b600181811c908216806200029957607f821691505b602082108103620002ba57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200030e57600081815260208120601f850160051c81016020861015620002e95750805b601f850160051c820191505b818110156200030a57828155600101620002f5565b5050505b505050565b81516001600160401b038111156200032f576200032f62000190565b620003478162000340845462000284565b84620002c0565b602080601f8311600181146200037f5760008415620003665750858301515b600019600386901b1c1916600185901b1785556200030a565b600085815260208120601f198616915b82811015620003b0578886015182559484019460019091019084016200038f565b5085821015620003cf5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b602081526000825180602084015262000400816040850160208701620001a6565b601f01601f19169190910160400192915050565b80516020808301519190811015620002ba5760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161126f6200049460003960006105350152600061050301526000610d1501526000610ced01526000610c4801526000610c7201526000610c9c015261126f6000f3fe60806040526004361061004a5760003560e01c806319d8d38c1461004f5780637ecebe001461008457806384b0196e146100c8578063ccf96b4a146100f0578063df905caf14610105575b600080fd5b34801561005b57600080fd5b5061006f61006a366004610e5d565b610118565b60405190151581526020015b60405180910390f35b34801561009057600080fd5b506100ba61009f366004610eb4565b6001600160a01b031660009081526002602052604090205490565b60405190815260200161007b565b3480156100d457600080fd5b506100dd6101d9565b60405161007b9796959493929190610f17565b6101036100fe366004610fad565b61021f565b005b610103610113366004610e5d565b61032e565b60008060008061012785610389565b5092509250925061016460405180604001604052806014815260200173034b9aa393ab9ba32b22337b93bb0b93232b91d160651b815250846104b3565b61018e60405180604001604052806008815260200167030b1ba34bb329d160c51b815250836104b3565b6101bd6040518060400160405280600d81526020016c039b4b3b732b926b0ba31b41d1609d1b815250826104b3565b8280156101c75750815b80156101d05750805b95945050505050565b6000606080600080600060606101ed6104fc565b6101f561052e565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6001600160a01b03811615600080805b858110156102e75786868281811061024957610249611033565b905060200281019061025b9190611049565b61026990604001358461107f565b9250600061029a88888481811061028257610282611033565b90506020028101906102949190611049565b8661055b565b9050806102d6578787838181106102b3576102b3611033565b90506020028101906102c59190611049565b6102d390604001358461107f565b92505b506102e081611092565b905061022f565b50348214610316576040516370647f7960e01b8152600481018390523460248201526044015b60405180910390fd5b801561032657610326848261073e565b505050505050565b8060400135341461035e57604080516370647f7960e01b815290820135600482015234602482015260440161030d565b61036981600161055b565b61038657604051630a12f52160e11b815260040160405180910390fd5b50565b60008060008060008061039b876107da565b915091506103ca60405180604001604052806009815260200168034b9ab30b634b21d160bd1b815250836104b3565b6103f76040518060400160405280600b81526020016a03932b1b7bb32b932b21d160ad1b8152508261098c565b60408051808201825260208082527f5f697354727573746564427954617267657428726571756573742e746f293a208183015261044a9261044591610440918c01908c01610eb4565b6109d1565b6104b3565b61045d6104406040890160208a01610eb4565b4261046e60a08a0160808b016110ab565b65ffffffffffff1610158380156104a2575061048d60208a018a610eb4565b6001600160a01b0316836001600160a01b0316145b919750955093509150509193509193565b6104f882826040516024016104c99291906110d3565b60408051601f198184030181529190526020810180516001600160e01b031663c3b5563560e01b179052610a4e565b5050565b60606105297f00000000000000000000000000000000000000000000000000000000000000006000610a57565b905090565b60606105297f00000000000000000000000000000000000000000000000000000000000000006001610a57565b600080600080600061056c87610389565b9350935093509350851561063257836105ba5761058f6040880160208901610eb4565b60405163d2650cd160e01b81526001600160a01b03909116600482015230602482015260440161030d565b826105f3576105cf60a08801608089016110ab565b604051634a777ac560e11b815265ffffffffffff909116600482015260240161030d565b8161063257806106066020890189610eb4565b604051636422d02b60e11b81526001600160a01b0392831660048201529116602482015260440161030d565b83801561063c5750815b80156106455750825b15610734576001600160a01b038116600090815260026020526040812080546001810190915590506060880135600061068460408b0160208c01610eb4565b905060408a0135600061069a60a08d018d6110f7565b6106a760208f018f610eb4565b6040516020016106b993929190611145565b6040516020818303038152906040529050600080600083516020850186888af19a505a90506106e8818e610b04565b604080518781528c151560208201526001600160a01b038916917f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c910160405180910390a25050505050505b5050505092915050565b804710156107615760405163cd78605960e01b815230600482015260240161030d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146107ae576040519150601f19603f3d011682016040523d82523d6000602084013e6107b3565b606091505b50509050806107d557604051630a12f52160e11b815260040160405180910390fd5b505050565b60008080806109296107ef60c08701876110f7565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061092392507f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac9150610857905060208a018a610eb4565b61086760408b0160208c01610eb4565b60408b013560608c013561088161009f60208f018f610eb4565b8d608001602081019061089491906110ab565b8e8060a001906108a491906110f7565b6040516108b292919061116b565b6040805191829003822060208301999099526001600160a01b0397881690820152959094166060860152608085019290925260a084015260c083015265ffffffffffff1660e08201526101008101919091526101200160405160208183030381529060405280519060200120610b1c565b90610b49565b509150915061096c6040518060400160405280600781526020016603737b731b29d160cd1b81525061096787600001602081019061009f9190610eb4565b610b96565b60008160038111156109805761098061117b565b14959194509092505050565b6104f882826040516024016109a2929190611191565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052610a4e565b604051306024820152600090819060440160408051601f19818403018152919052602080820180516001600160e01b031663572b6c0560e01b17815282519293506000928392839290918391895afa92503d91506000519050828015610a38575060208210155b8015610a445750600081115b9695505050505050565b61038681610bdb565b606060ff8314610a7157610a6a83610bfc565b9050610afe565b818054610a7d906111bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa9906111bb565b8015610af65780601f10610acb57610100808354040283529160200191610af6565b820191906000526020600020905b815481529060010190602001808311610ad957829003601f168201915b505050505090505b92915050565b610b13603f60608301356111f5565b8210156104f857fe5b6000610afe610b29610c3b565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008351604103610b835760208401516040850151606086015160001a610b7588828585610d66565b955095509550505050610b8f565b50508151600091506002905b9250925092565b6104f88282604051602401610bac929190611217565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052610a4e565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b60606000610c0983610e35565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610c9457507f000000000000000000000000000000000000000000000000000000000000000046145b15610cbe57507f000000000000000000000000000000000000000000000000000000000000000090565b610529604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610da15750600091506003905082610e2b565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610df5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610e2157506000925060019150829050610e2b565b9250600091508190505b9450945094915050565b600060ff8216601f811115610afe57604051632cd44ac360e21b815260040160405180910390fd5b600060208284031215610e6f57600080fd5b813567ffffffffffffffff811115610e8657600080fd5b820160e08185031215610e9857600080fd5b9392505050565b6001600160a01b038116811461038657600080fd5b600060208284031215610ec657600080fd5b8135610e9881610e9f565b6000815180845260005b81811015610ef757602081850181015186830182015201610edb565b506000602082860101526020601f19601f83011685010191505092915050565b60ff60f81b881681526000602060e081840152610f3760e084018a610ed1565b8381036040850152610f49818a610ed1565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b81811015610f9b57835183529284019291840191600101610f7f565b50909c9b505050505050505050505050565b600080600060408486031215610fc257600080fd5b833567ffffffffffffffff80821115610fda57600080fd5b818601915086601f830112610fee57600080fd5b813581811115610ffd57600080fd5b8760208260051b850101111561101257600080fd5b6020928301955093505084013561102881610e9f565b809150509250925092565b634e487b7160e01b600052603260045260246000fd5b6000823560de1983360301811261105f57600080fd5b9190910192915050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610afe57610afe611069565b6000600182016110a4576110a4611069565b5060010190565b6000602082840312156110bd57600080fd5b813565ffffffffffff81168114610e9857600080fd5b6040815260006110e66040830185610ed1565b905082151560208301529392505050565b6000808335601e1984360301811261110e57600080fd5b83018035915067ffffffffffffffff82111561112957600080fd5b60200191503681900382131561113e57600080fd5b9250929050565b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b8183823760009101908152919050565b634e487b7160e01b600052602160045260246000fd5b6040815260006111a46040830185610ed1565b905060018060a01b03831660208301529392505050565b600181811c908216806111cf57607f821691505b6020821081036111ef57634e487b7160e01b600052602260045260246000fd5b50919050565b60008261121257634e487b7160e01b600052601260045260246000fd5b500490565b60408152600061122a6040830185610ed1565b9050826020830152939250505056fea2646970667358221220ac919fbcd315f590839ba6deb219d82ed118f7ebd219acf9b7e00a6bd3ab33de64736f6c63430008140033";

type ERC2771ForwarderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC2771ForwarderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC2771Forwarder__factory extends ContractFactory {
  constructor(...args: ERC2771ForwarderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC2771Forwarder> {
    return super.deploy(name, overrides || {}) as Promise<ERC2771Forwarder>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, overrides || {});
  }
  override attach(address: string): ERC2771Forwarder {
    return super.attach(address) as ERC2771Forwarder;
  }
  override connect(signer: Signer): ERC2771Forwarder__factory {
    return super.connect(signer) as ERC2771Forwarder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC2771ForwarderInterface {
    return new utils.Interface(_abi) as ERC2771ForwarderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC2771Forwarder {
    return new Contract(address, _abi, signerOrProvider) as ERC2771Forwarder;
  }
}
